# Sample configuration file for pymix
[Pyano]

# Path to the mixmaster binary
# 
# Pyano assumes that mixmaster is installed on the system
# and that the user running the web-server can use it.
# Make sure this works before trying to run the web interface.
# For example, try:
#   su www-data; mixmaster
#
# Default: /usr/bin/mixmaster
#
#mixmaster: /usr/bin/mixmaster

# Local remailer address
#
# When using the form to add email addresses to the block list, pyano
# does not edit mixmaster's dest.blk file directly but instead sends a
# 'destination-block name@domain.com' email to the remailer and lets
# mixmaster do the rest.
#
# Default: ''
#
#remailer_addr: remailer@rip.ax.lt

# Default list of mail2news gateways
#
# A comma-separated list of mail2news gateways to use in the
# usenet web interface to override the configuration of the
# final remailer in the chain.
#
# Default: mail2news@dizum.com, mail2news@bananasplit.info, mail2news@m2n.mixmin.net, mail2news@reece.net.au
#
#mail2news: mail2news@dizum.com, mail2news@m2n.mixmin.net

# Path to the mlist2.txt file
#
# This file contains reliability statistics on known remailers.
# Without it, the interface will not display any statistics or 
# allow you to choose your remailer chain, and simply rely
# on mixmaster to make all the decisions.
#
# This file is provided either by a pinger (e.g. echolot)
# or located in the 'stats' directory of the mixmaster user's home
# after running 'mixmaster --update-stats'.
#
# The webserver needs READ access to this file. 
#
# Default: ''
#
#mlist2: /home/echolot/results/mlist2.txt


# Path to the from.html file
#
# This file contains information on which remailers
# allow User-supplied 'From' headers. Without it, the interface
# will display no information on whether or not a given 
# pinger lets though custon 'From' headers.
#
# This file is provided by the echolot pinger. If you don't run
# a pinger yourself, you can run a cron script to regularily 
# download it from a pinger's website.
# 
# The webserver needs READ access to this file. 
#
# Default: ''
#
#allow_from: /home/echolot/results/from.html

# Path to the results.txt file from http://drsnoid.cotse.net/gatepick.htm
#
# This file contains information on which combinations of mail2news
# gateways and exit remailer work and which do not.
#
# Pyano assumes that this file is available on the local filesystem,
# typically through a cron script that regularly fetches the latest
# version from http://drsnoid.cotse.net/gatepick.htm.
#
# The webserver needs READ access to this file.
#
# Default: ''
#
#bad_mail2news: /var/lib/mixmaster/results.txt


# Security
#
# In order to prevent spamming, Pyano keeps timestamps
# of the past uses of the web interface per ip in the 'hist_file'
# file.
#
# Pyano uses a sliding window of 'hist_window' minutes. 
# During this period, a given ip may not send more than 'hist_max_uses'
# messages during this time frame. If the same ip continues to
# try to send messages despite being blocked, it will be permanently
# banned after 2*'hist_max_uses' attempts. These ips are stored in
# the 'banned_file' file.
#
# The webserver needs WRITE access to both the 'hist_file' and
# 'banned_file'. 
#
# WARNING: if these option is not defined, there will be no
# limit on the frequency with which people may use the 
# interface.
# 
# Defaults:
#   hist_file: ''
#   banned_file: ''
#   hist_window: 15
#   hist_max_uses: 5
#
#hist_file: /tmp/hist_file
#banned: /tmp/banned_file
#hist_window: 15
#hist_max_uses: 5


# Maximum Chain Length
#
# This sets the maximum number of remailers that may
# be chosen in the web interface.
#
# Default: 5
#
#max_chain_length: 5


# Maximum number of copies
#
# This sets the maximum number of redundant copies that may
# be chosen in the web interface to increase reliability.
#
# Default: 5
#
#max_copies: 5


# HTML template for the email interface
#
# This is the global html template present for all pages generated by
# the email interface. It must contain a "<!--CONTENT-->" block that
# pyano will replace with the page to return.
#
# Default:
#
# <?xml version="1.0" encoding="UTF-8"?>
# <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
# <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
#   <head>
#     <title>Pyano Anonymous Email Web Interface</title>
#     <style type = "text/css" >
#       #mixtable .line { width: 100%; }
#       #mixtable td { vertical-align: top; }
#       #mixtable select { font-family: monospace; }
#       #mixtable textarea { width: 100%; height: 20em; }
#     </style>
#   </head>
#   <body>
#     <h1>Pyano Anonymous Email Web Interface</h1>
#
#     <!--CONTENT-->
#
#     <div id="copyright">
#       <a href="http://pyanon.sourceforge.net">Pyano</a> - Mixmaster web interface for mod_python
#     </div>
#   </body>
# </html>
#
#mail_html: /var/lib/mixaster/mail.html


# HTML template for the email submission form
#
# This html snippet will envelop the actual submission form before
# being used to replace the "<!--CONTENT-->" tag in mail_html. This is
# a good place to put some help. The actual form will be written
# in place of <!--FORM-->.
#
# Default:
#  <p>
#    Use this mixmaster web interface to send anonymous emails. If no remailers are selected in the chain, then mixmaster will automatically select a remailer chain for you. If you intend on using the <em>From</em> field please read the instructions <a href="#from">here</a>. For more detailed instructions, refer to the <a href="#help">help</a> section below.
#  </p>
#  <p>
#    Fields marked with <strong>*</strong> are mandatory.
#  </p>
#  <h2>Web Interface</h2>
#
#  <!--FORM-->
#
#  <h2><a name="help">Help</a></h2>
#  <h3><a name="from">From</a></h3>
#  <p>
#    Not all remailers support "from" lines. If you wish to use a custom from line rather than one the remailer chooses for you, you must select a remailer that supports custom from lines as the last remailer in the chain! Put your from line in this format: <kbd>"John Smith" &lt;john@domain.com&gt;</kbd>
#  </p>
#  <h3>Chain &amp; copies</h3>
#  <p>
#    Mixmaster wraps your message in layers of PGP encryption. Each remailer in the chain unwraps one layer and then sends the rest to the next remailer. In this way no one remailer knows the source, destination, and contents. The longer the chain you use, the more guaranteed the anonymity. However, this comes at the cost of reliabilty. Indeed, remailers can be unreliable and there is no guarantee that every message sent will arrive at it's destination. Increasing the number of copies increases the reliability.
# </p>
#  <p>
#    The remailers are listed in the drop lists with some stats. Those stats are as follows:
#  </p>
#  <ul class="description">
#    <li><dfn>Name</dfn>: The name of the remailer.</li>
#    <li><dfn>Latency</dfn>: Latency means how long the remailer will hold onto the message before delivering it to the next remailer in line.</li>
#    <li><dfn>Uptime</dfn>: This is a percentage. Obviously you want to use remailers with high uptime. I would choose 95% or better.</li>
#    <li><dfn>M (middle)</dfn>: If you see this letter next to a remailer it means that this remailer only operates in <em>middleman</em> mode. That means you can only use it in the middle of a chain. If you use it at the end, your message will not be delivered.</li>
#    <li><dfn>F (from) </dfn>: This remailer may allow user-supplied from headers. See above for more information.</li>
#    <li><dfn>(breaks: list)</dfn>: This remailer has known problems when using any other remailer in this list as a next hop.</li>
#  </ul> 
#
#mail_form_html: /var/lib/mixmaster/mail_form.html


# HTML template for the usenet interface
#
# Same as mail_html but for the usenet interface
#
#news_html: /var/lib/mixmaster/news.html


# HTML template for the usenet submission form
#
# Same a mail_form_html but for the usenet interface
#
#news_form_html: /var/lib/mixmaster/news_form.html


# HTML template for the email block interface
#
# Same as mail_html but for the email block interface
#
#block_html: /var/lib/mixmaster/news.html
